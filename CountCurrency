/*
Given an amount, find the minimum number of notes of different denominations that sum up to the given amount.
Starting from the highest denomination note, try to accommodate as many notes as possible for a given amount.
We may assume that we have infinite supply of notes of values {2000, 500, 200, 100, 50, 20, 10, 5, 1} 
*/
public class CountCurrency {
    public static void main(String[] args){
        int Amount = 1723;
        int[] Currency={2000, 1000, 500, 200, 100, 50, 20, 10, 5, 1};
        int n=Currency.length;
        int[] CurrencyCounter= new int[n];
        int i=0;
        while(i < n){
            if(Amount > Currency[i]){
                 // finding the count ie., how much Currency[i] in amount
                 CurrencyCounter[i]= Amount/ Currency[i];
                 //FInding the balance Amount
                 Amount %= Currency[i];            
            }
            i++;
        }
        // Displaying the answer
        for(int j=0;j<n;j++){
            if(CurrencyCounter[j]!=0){
                System.out.println(Currency[j]+" : "+CurrencyCounter[j]);
            }
        }
    }      
}
