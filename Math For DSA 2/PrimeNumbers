public class Sample{
    static boolean prime1(int n){
        if(n<=1)
            return false;
        for(int c=2; c<n; c++){
            if(n%c ==0){
                return false;
            }
        }
    return true;
    }
    
    static boolean prime(int n){
        if(n<=1)
            return false;
        int c=2;
        while(c*c < n){
            if(n%c == 0){
                return false;
            }
            c++;
        }
        return c*c > n;
    }
    
    static void primeRange(int n){
        for(int i=2; i<=n; i++){
            System.out.print(i+" -> "+prime1(i));
            System.out.println();
        }
    }
    
    static void Sieve_primeRange1(int n, boolean[] primes){
        //Initially all boolean array elements are set to false
        for(int i=2; i*i<=n ; i++){
            if(!primes[i])//false
            {
                for(int j=i*2;j<=n;j+=i){
                     primes[j]=true;
                }
            }
        }
        for(int i=2;i<=n;i++){
            if(!primes[i]){
                System.out.print(i+" ");
            }
        }
    }
    
    public static void main(String[] args){
        boolean[] primes = new boolean[41];// size 41 since 40 is also included
        Sieve_primeRange1(40, primes);
    }
}
